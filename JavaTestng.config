<?xml version="1.0" encoding="UTF-8"?>
<AutomationConfiguration>
    <Objects>
        <Object>
            <ObjectType>Alert</ObjectType>
            <ObjectActions>
                <Action ActionName="Accept Alert" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;getWebDriver().switchTo().alert().accept();&#10;"/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Button</ObjectType>
            <ObjectActions>
                <Action ActionName="Click" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.click_Button_Radio_Checkbox(&quot;~VARIABLE_NAME[1]~&quot; , getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Double Click" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.doubleClick_object(&quot;~VARIABLE_NAME[1]~&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Hardcoded Click" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.clickFromAD(&quot;~VARIABLE_NAME[1]~&quot;, &quot;~VARIABLE_NAME[2]~&quot;, getWebDriver());&#10;"/>
                <Action ActionName="Verify Disabled" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyNotClickable(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Enabled" CodeSnippet=""/>
                <Action ActionName="Verify Exists" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.assertElementExists(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Has Focus" CodeSnippet=""/>
                <Action ActionName="Verify Not Exists" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyNotExists(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());"/>
                <Action ActionName="Verify Visible" CodeSnippet=""/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Check Box</ObjectType>
            <ObjectActions>
                <Action ActionName="Click" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.click_Button_Radio_Checkbox(&quot;~VARIABLE_NAME[1]~&quot; , getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Hardcoded Click" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.clickFromAD(&quot;~VARIABLE_NAME[1]~&quot;, &quot;~VARIABLE_NAME[2]~&quot;, getWebDriver());&#10;"/>
                <Action ActionName="Set Off" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.toggleCheckbox(&quot;~VARIABLE_NAME[1]~&quot;, false, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Set On" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.toggleCheckbox(&quot;~VARIABLE_NAME[1]~&quot;, true, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Enabled" CodeSnippet=""/>
                <Action ActionName="Verify Exists" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.assertElementExists(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Has Focus" CodeSnippet=""/>
                <Action ActionName="Verify Not Exists" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyNotExists(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify On Off" CodeSnippet=""/>
                <Action ActionName="Verify Visible" CodeSnippet=""/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Date/Time</ObjectType>
            <ObjectActions>
                <Action ActionName="Capture Date/Time" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.captureDateTime(&quot;~VARIABLE_NAME[1]~&quot;, getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Set Date/Time Format" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.setDateTimeFormat(&quot;~VARIABLE_NAME[1]~&quot;, getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Date/Time" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyDateTime(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Dropdown</ObjectType>
            <ObjectActions>
                <Action ActionName="Click" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.click_Button_Radio_Checkbox(&quot;~VARIABLE_NAME[1]~&quot; , getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Select Item" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.selectFromList(&quot;~VARIABLE_NAME[1]~&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Select Item Hardcoded" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.selectDropdownHardcoded(&quot;~VARIABLE_NAME[1]~&quot;, &quot;~VARIABLE_NAME[2]~&quot;, &quot;~VARIABLE_NAME[3]~&quot;, getWebDriver());&#10;"/>
                <Action ActionName="Verify Enabled" CodeSnippet=""/>
                <Action ActionName="Verify Exists" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.assertElementExists(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Has Focus" CodeSnippet=""/>
                <Action ActionName="Verify Items Not Present" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyNotInDropdown(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Not Exists" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyNotExists(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Text" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyDropdownList(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Visible" CodeSnippet=""/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Element</ObjectType>
            <ObjectActions>
                <Action ActionName="Attach File" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.attachFile(&quot;~VARIABLE_NAME[1]~&quot;, getWebDriver(), getExcelTab(), getExcelPath(), &quot;##Path Name[p1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;"/>
                <Action ActionName="Click" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.click_Button_Radio_Checkbox(&quot;~VARIABLE_NAME[1]~&quot; , getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Double Click" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.doubleClick_object(&quot;~VARIABLE_NAME[1]~&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Hardcoded Click" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.clickFromAD(&quot;~VARIABLE_NAME[1]~&quot;, &quot;~VARIABLE_NAME[2]~&quot;, getWebDriver());&#10;"/>
                <Action ActionName="Verify Color" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyTextColor(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Data in Table" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyTableValues(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Exists" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.assertElementExists(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Not Exists" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyNotExists(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Excel Sheet</ObjectType>
            <ObjectActions>
                <Action ActionName="Capture Data" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.captureData(&quot;~VARIABLE_NAME[1]~&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Mark Data Used" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;String usedColumn{Step} = TMX_lib.readExcel(&quot;~VARIABLE_NAME[1]~&quot;, getExcelTab(), getExcelPath());&#10;&#9;&#9;String[] strArrDataUsed{Step} = usedColumn{Step}.split(&quot;;&quot;);&#10;&#9;&#9;String dataUsed{Step} = strArrDataUsed{Step}[0];&#10;"/>
                <Action ActionName="Set Excel Name" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.xlname = &quot;~VARIABLE_NAME[1]~&quot;;&#10;&#9;&#9;setExcelPath(TMX_lib.setxlpath(browser, getTestName()));&#10;"/>
                <Action ActionName="Set Tab Name" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;setExcelTab(&quot;~VARIABLE_NAME[1]~&quot;);&#10;"/>
                <Action ActionName="Set Type to All" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.setColType(&quot;~VARIABLE_NAME[1]~&quot;, &quot;all&quot;, getExcelPath(), getExcelTab());&#10;"/>
                <Action ActionName="Set Type to Any" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.setColType(&quot;~VARIABLE_NAME[1]~&quot;, &quot;any&quot;, getExcelPath(), getExcelTab());&#10;"/>
                <Action ActionName="Set Type to Capture" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.setColType(&quot;~VARIABLE_NAME[1]~&quot;, &quot;capture&quot;, getExcelPath(), getExcelTab());&#10;"/>
                <Action ActionName="Set Type to Click" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.setColType(&quot;~VARIABLE_NAME[1]~&quot;, &quot;click&quot;, getExcelPath(), getExcelTab());&#10;"/>
                <Action ActionName="Set Type to Single" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.setColType(&quot;~VARIABLE_NAME[1]~&quot;, &quot;single&quot;, getExcelPath(), getExcelTab());&#10;"/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>iASA</ObjectType>
            <ObjectActions>
                <Action ActionName="Verify Errors" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyTags(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify No Errors" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyTagsNotPresent(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Image</ObjectType>
            <ObjectActions>
                <Action ActionName="Click By Name" CodeSnippet=""/>
                <Action ActionName="Verify Exists" CodeSnippet="&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyImg(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());"/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Label Interactions</ObjectType>
            <ObjectActions>
                <Action ActionName="Click" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib. click_Button_Radio_Checkbox_WithLabel (&quot;~VARIABLE_NAME[1]~&quot;, getWebDriver());&#10;"/>
                <Action ActionName="Input Text" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.fillEditbox_WithLabel (&quot;~VARIABLE_NAME[1]~&quot;,&quot;~VARIABLE_NAME[2]~&quot;, getWebDriver());&#10;"/>
                <Action ActionName="Select from Dropdown/List" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.selectFromList_WithLabel (&quot;~VARIABLE_NAME[1]~&quot;, &quot;~VARIABLE_NAME[2]~&quot;, getWebDriver());&#10;"/>
                <Action ActionName="Verify Labels" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib. verifyPageLabels(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Link</ObjectType>
            <ObjectActions>
                <Action ActionName="Click" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.click_Button_Radio_Checkbox(&quot;~VARIABLE_NAME[1]~&quot; , getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Hardcoded Click" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.clickFromAD(&quot;~VARIABLE_NAME[1]~&quot;, &quot;~VARIABLE_NAME[2]~&quot;, getWebDriver());&#10;"/>
                <Action ActionName="Verify Enabled" CodeSnippet=""/>
                <Action ActionName="Verify Exists" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.assertElementExists(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Has Focus" CodeSnippet=""/>
                <Action ActionName="Verify Not Exists" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyNotExists(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Visible" CodeSnippet=""/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>List</ObjectType>
            <ObjectActions>
                <Action ActionName="Click By Name" CodeSnippet=""/>
                <Action ActionName="Select Item" CodeSnippet=""/>
                <Action ActionName="Verify Enabled" CodeSnippet=""/>
                <Action ActionName="Verify Exists" CodeSnippet=""/>
                <Action ActionName="Verify Has Focus" CodeSnippet=""/>
                <Action ActionName="Verify Visible" CodeSnippet=""/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Logging</ObjectType>
            <ObjectActions>
                <Action ActionName="Capture Screenshot" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;Capturing a screenshot of the page&quot;);&#10;&#9;&#9;TMX_lib.captureScreenShot(getWebDriver(), &quot;##Path Name[p1]##&quot;, &quot;&quot;);&#10;"/>
                <Action ActionName="Log Step" CodeSnippet="&#9;&#9;logger.info(&quot;Step &quot;);"/>
                <Action ActionName="Step Separator" CodeSnippet="//--------------------------------------------------------------------------------------------"/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Login/Logout</ObjectType>
            <ObjectActions>
                <Action ActionName="Login as MF User" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;setCurrentUser(TMX_lib.loginUser(&quot;~VARIABLE_NAME[1]~&quot;, getWebDriver(), getExcelTab(), getExcelPath()));&#10;"/>
                <Action ActionName="Logout of MF User" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.logoutUser(getWebDriver());&#10;"/>
                <Action ActionName="MF Login Process" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;getWebDriver().get(&quot;https://test.salesforce.com/&quot;);&#10;&#9;&#9;TMX_lib.fillEditbox(&quot;username_field&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;&#9;&#9;String[] userArr = TMX_lib.readExcel(&quot;username_field&quot;, getExcelTab(), getExcelPath()).split(&quot;;&quot;);&#10;&#9;&#9;setCurrentUser(userArr[0]);&#10;&#9;&#9;TMX_lib.fillEditbox(&quot;password_field&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;&#10;&#9;&#9;setObject(TMX_lib.elementExists(By.id(&quot;Login&quot;), getWebDriver()));&#10;&#9;&#9;if(getObject() != null) {&#10;&#9;&#9;&#9;getObject().click();&#10;&#9;&#9;}&#10;&#9;&#9;else {&#10;&#9;&#9;&#9;Assert.fail(&quot;Failed to login to sandbox environment&quot;);&#10;&#9;&#9;}&#10;&#9;&#9;Thread.sleep(500);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;"/>
                <Action ActionName="Switch User" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;setCurrentUser(TMX_lib.switchUser(&quot;~VARIABLE_NAME[1]~&quot;, getWebDriver(), getExcelTab(), getExcelPath()));&#10;"/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Menu</ObjectType>
            <ObjectActions>
                <Action ActionName="Click By Name" CodeSnippet=""/>
                <Action ActionName="Verify Exists" CodeSnippet=""/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>MF Custom Actions</ObjectType>
            <ObjectActions>
                <Action ActionName="Find and Approve Agreement" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;Thread.sleep(500);&#10;&#9;&#9;String tableLoc##OBJ_NAME## = TMX_lib.readExcel(&quot;~VARIABLE_NAME[1]~&quot;, getExcelTab(), getExcelPath());&#10;&#9;&#9;String[] arrTableLoc##OBJ_NAME## = tableLoc##OBJ_NAME##.split(&quot;;&quot;);&#10;&#9;&#9;String tableID##OBJ_NAME## = arrTableLoc##OBJ_NAME##[1];&#10;&#10;&#9;&#9;Thread.sleep(500);&#10;&#10;&#9;&#9;WebElement table##OBJ_NAME## = getWebDriver().findElement(By.xpath(tableID##OBJ_NAME##));&#10;&#9;&#9;List&lt;WebElement&gt; rows##OBJ_NAME## = table##OBJ_NAME##.findElements(By.tagName(&quot;tr&quot;));&#10;&#10;&#9;&#9;for(WebElement row : rows##OBJ_NAME##)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;boolean isFound = false;&#10;&#9;&#9;&#9;List&lt;WebElement&gt; cells = row.findElements(By.tagName(&quot;td&quot;));&#10;&#9;&#9;&#9;for(WebElement cell : cells)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(cell.getText().equals(getCurrentUser()))&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;isFound = true;&#10;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if(isFound)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;for(WebElement cell : cells)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;if(cell.getText().contains(&quot;Approve&quot;))&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;try{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;WebElement approveLink = cell.findElement(By.partialLinkText(&quot;Approve&quot;));&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;approveLink.click();&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;} catch (Exception e){}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;Thread.sleep(1500);"/>
                <Action ActionName="Find and Click Agreement from List" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;{&#10;&#9;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;&#9;String sArg4 = TMX_lib.readExcel(&quot;~VARIABLE_NAME[1]~&quot;, getExcelTab(), getExcelPath());&#10;&#9;&#9;&#9;String[] strArray3 = sArg4.split(&quot;;&quot;);&#10;&#9;&#9;&#9;String objectid2 = strArray3[1];&#10;&#9;&#9;&#9;String elementID2 = null;&#10;&#9;&#9;&#9;boolean isFound2 = false;&#10;&#10;&#9;&#9;&#9;setExcelTab(&quot;newCustomCAAPage&quot;);&#10;&#9;&#9;&#9;String sArg5 = TMX_lib.readExcel(&quot;~VARIABLE_NAME[2]~&quot;, getExcelTab(), getExcelPath());&#10;&#9;&#9;&#9;String[] strArray4 = sArg5.split(&quot;;&quot;);&#10;&#9;&#9;&#9;String testData2 = strArray4[0];&#10;&#9;&#9;&#9;setExcelTab(&quot;COE Agreements&quot;);&#10;&#10;&#9;&#9;&#9;List&lt;WebElement&gt; elements2 = getWebDriver().findElements(By.xpath(&quot;//*[contains(@id, \&quot;&quot; + objectid2 + &quot;\&quot;)]&quot;));&#10;&#10;&#9;&#9;&#9;for(WebElement ele:elements2)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(ele.getText().equals(testData2))&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;elementID2 = ele.getAttribute(&quot;id&quot;);&#10;&#9;&#9;&#9;&#9;&#9;isFound2 = true;&#10;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;if(isFound2)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;int index = elementID2.indexOf(&quot;_&quot;);&#10;&#9;&#9;&#9;&#9;elementID2 = elementID2.substring(0, index);&#10;            &#10;&#9;&#9;&#9;&#9;WebElement agreement = TMX_lib.elementExists(By.xpath(&quot;//*[contains(@href, \&quot;&quot; + elementID2 + &quot;\&quot;)]&quot;), getWebDriver());&#10;&#9;&#9;&#9;&#9;if(agreement != null)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;agreement.click();&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;logger.warn(&quot;object &quot; + testData2 + &quot; not found&quot;);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;Thread.sleep(1500);"/>
                <Action ActionName="Find and Click Agreement from Table" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;{&#10;&#9;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;&#9;String tableLoc = TMX_lib.readExcel(&quot;~VARIABLE_NAME[1]~&quot;, getExcelTab(), getExcelPath());&#10;&#9;&#9;&#9;String[] arrTableLoc = tableLoc.split(&quot;;&quot;);&#10;&#9;&#9;&#9;String tableID = arrTableLoc[1];&#10;&#9;&#9;&#9;boolean foundEle = false;&#10;&#10;&#9;&#9;&#9;setExcelTab(&quot;newCustomCAAPage&quot;);&#10;&#9;&#9;&#9;String eleLoc = TMX_lib.readExcel(&quot;~VARIABLE_NAME[2]~&quot;, getExcelTab(), getExcelPath());&#10;&#9;&#9;&#9;String[] arrEleLoc = eleLoc.split(&quot;;&quot;);&#10;&#9;&#9;&#9;String eleID = arrEleLoc[0];&#10;&#9;&#9;&#9;setExcelTab(&quot;~VARIABLE_NAME[3]~&quot;);&#10;&#10;&#9;&#9;&#9;WebElement table = getWebDriver().findElement(By.xpath(tableID));&#10;&#9;&#9;&#9;List&lt;WebElement&gt; rows = table.findElements(By.tagName(&quot;tr&quot;));&#10;&#10;&#9;&#9;&#9;for(WebElement row : rows)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;List&lt;WebElement&gt; cells = row.findElements(By.tagName(&quot;td&quot;));&#10;&#9;&#9;&#9;&#9;for(WebElement cell : cells)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;if(cell.getText().equals(eleID))&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;foundEle = true;&#10;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;if(foundEle)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;WebElement currCell = row.findElement(By.tagName(&quot;th&quot;));&#10;&#9;&#9;&#9;&#9;&#9;currCell.findElement(By.tagName(&quot;a&quot;)).click();&#10;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if(!foundEle)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;logger.warn(&quot;object &quot; + eleID + &quot; not found&quot;);&#10;&#9;&#9;&#9;}  &#10;&#9;&#9;}&#10;&#9;&#9;Thread.sleep(1500);"/>
                <Action ActionName="Find and Select Agreement from List" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;{&#10;&#9;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;&#9;String stringArgs = TMX_lib.readExcel(&quot;~VARIABLE_NAME[1]~&quot;, getExcelTab(), getExcelPath());&#10;&#9;&#9;&#9;String[] stringArray = stringArgs.split(&quot;;&quot;);&#10;&#9;&#9;&#9;String objectIdentifier = stringArray[1];&#10;&#9;&#9;&#9;elementID = null;&#10;&#9;&#9;&#9;boolean isElementFound = false;&#10;&#10;&#9;&#9;&#9;setExcelTab(&quot;newCustomCAAPage&quot;);&#10;&#9;&#9;&#9;String stringArgs_2 = TMX_lib.readExcel(&quot;~VARIABLE_NAME[2]~&quot;, getExcelTab(), getExcelPath());&#10;&#9;&#9;&#9;String[] stringArray_2 = stringArgs_2.split(&quot;;&quot;);&#10;&#9;&#9;&#9;String testData = stringArray_2[0];&#10;&#9;&#9;&#9;setExcelTab(&quot;COE Agreements&quot;);&#10;&#10;&#9;&#9;&#9;List&lt;WebElement&gt; webElements = getWebDriver().findElements(By.xpath(&quot;//*[contains(@id, \&quot;&quot; + objectIdentifier + &quot;\&quot;)]&quot;));&#10;&#10;&#9;&#9;&#9;for(WebElement ele:webElements)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if(ele.getText().equals(testData))&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;elementID = ele.getAttribute(&quot;id&quot;);&#10;&#9;&#9;&#9;&#9;&#9;isElementFound = true;&#10;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;if(isElementFound)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;int index = elementID.indexOf(&quot;_&quot;);&#10;&#9;&#9;&#9;&#9;elementID = elementID.substring(0, index);&#10;            &#10;&#9;&#9;&#9;&#9;WebElement agreement##OBJ_NAME## = TMX_lib.elementExists(By.id(elementID), getWebDriver());&#10;&#9;&#9;&#9;&#9;if(agreement##OBJ_NAME## != null)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;agreement##OBJ_NAME##.click();&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else{&#10;&#9;&#9;&#9;&#9;logger.warn(&quot;object &quot; + testData + &quot; not found&quot;);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}"/>
                <Action ActionName="Open MF Application" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;Thread.sleep(500);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;setObject(TMX_lib.elementExists(By.xpath(&quot;//*[contains(@title, \&quot;All Tabs\&quot;)]&quot;), getWebDriver()));&#10;&#9;&#9;if (getObject() != null) {    &#10;&#9;&#9;&#9;getObject().click();&#10;&#9;&#9;}&#10;    &#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;setObject(TMX_lib.elementExists(By.linkText(&quot;~VARIABLE_NAME[1]~&quot;), getWebDriver()));&#10;&#9;&#9;if (getObject() != null) {&#10;&#9;&#9;&#9;getObject().click();&#10;&#9;&#9;}&#10;&#9;&#9;else {&#10;&#9;&#9;&#9;Assert.fail(&quot;Application ~VARIABLE_NAME[1]~ not found!&quot;);&#10;&#9;&#9;}&#10;"/>
                <Action ActionName="QA Communities Login" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;getWebDriver().get(&quot;https://qa-aexpmccy.cs24.force.com/login&quot;);&#10;&#9;&#9;TMX_lib.fillEditbox(&quot;username_field_comm&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;&#9;&#9;String[] userArr = TMX_lib.readExcel(&quot;username_field_comm&quot;, getExcelTab(), getExcelPath()).split(&quot;;&quot;);&#10;&#9;&#9;setCurrentUser(userArr[0]);&#10;&#9;&#9;TMX_lib.fillEditbox(&quot;password_field_comm&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10; &#10;&#9;&#9;setObject(TMX_lib.elementExists(By.id(&quot;Login&quot;), getWebDriver()));&#10;&#9;&#9;if(getObject() != null) {&#10;&#9;&#9;&#9;getObject().click();&#10;&#9;&#9;} else {&#10;&#9;&#9;&#9;Assert.fail(&quot;Failed to login to sandbox environment&quot;);&#10;&#9;&#9;}&#10;&#9;&#9;Thread.sleep(1000);&#10;"/>
                <Action ActionName="Search for Agreement" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;String agreementLabel = TMX_lib.readExcel(&quot;~VARIABLE_NAME[1]~&quot;, getExcelTab(), getExcelPath());&#10;&#9;&#9;String[] agreementArray = agreementLabel.split(&quot;;&quot;);&#10;&#9;&#9;String agreementNum = agreementArray[0].substring(0, (agreementArray[0].indexOf(&quot;.&quot;)));&#10;&#9;&#9;String agreementId = agreementArray[1];&#10;&#9;&#9;String agreementIdType = agreementArray[2];&#10;&#10;&#9;&#9;Thread.sleep(2000);&#10;&#10;&#9;&#9;boolean isAgreementFound = false;&#10;&#9;&#9;WebElement agreement = TMX_lib.allCheck(agreementId, agreementIdType, getWebDriver());&#10;&#9;&#9;isAgreementFound = agreement != null;&#10;&#10;&#9;&#9;if(!isAgreementFound)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;logger.warn(agreementId + &quot; not found&quot;);&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;agreement.clear();&#10;&#9;&#9;&#9;agreement.sendKeys(agreementNum);&#10;&#9;&#9;}&#10;"/>
                <Action ActionName="Verify MF HelpText" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyMFTooltip(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>No Type</ObjectType>
            <ObjectActions/>
        </Object>
        <Object>
            <ObjectType>Radio Button</ObjectType>
            <ObjectActions>
                <Action ActionName="Click" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.click_Button_Radio_Checkbox(&quot;~VARIABLE_NAME[1]~&quot; , getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Hardcoded Click" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.clickFromAD(&quot;~VARIABLE_NAME[1]~&quot;, &quot;~VARIABLE_NAME[2]~&quot;, getWebDriver());&#10;"/>
                <Action ActionName="Set On" CodeSnippet=""/>
                <Action ActionName="Verify Enabled" CodeSnippet=""/>
                <Action ActionName="Verify Exists" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.assertElementExists(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Has Focus" CodeSnippet=""/>
                <Action ActionName="Verify Not Exists" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyNotExists(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify On Off" CodeSnippet=""/>
                <Action ActionName="Verify Visible" CodeSnippet=""/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Test Setup</ObjectType>
            <ObjectActions>
                <Action ActionName="Initial Test Setup" CodeSnippet="package com.amex.merchantforce.MFTesting;&#10;&#10;import java.lang.reflect.Method;&#10;&#10;import java.util.List;&#10;&#10;import org.testng.*;&#10;import org.testng.annotations.*;&#10;&#10;import com.saucelabs.testng.SauceOnDemandTestListener;&#10;&#10;import org.apache.logging.log4j.LogManager;&#10;import org.apache.logging.log4j.Logger;&#10;&#10;import org.openqa.selenium.*;&#10;&#10;@Listeners({SauceOnDemandTestListener.class})&#10;public class ##Path Name[p1]##Test extends BaseTestClass {&#10;&#10;&#9;private static final Logger logger = LogManager.getLogger();&#10;&#10;&#9;@Test(dataProvider=&quot;hardCodedBrowsers&quot;, retryAnalyzer=Retry.class, groups={&quot;functional&quot;, &quot;##Title[f1]##&quot;})&#10;&#9;public void test##Path Name[p1]##(String browser, String version, String os, Method method) throws Exception {&#10;&#9;&#9;logger.info(&quot;Starting test ##Path Name[p1]##&quot;);&#10;&#10;&#9;&#9;SauceOnDemandTestListener.verboseMode = false;&#10;&#10;&#9;&#9;if(System.getProperty(&quot;remoteRun&quot;).equalsIgnoreCase(&quot;true&quot;)){&#10;&#9;&#9;&#9;logger.info(&quot;Creating a remote WebDriver&quot;);&#10;&#9;&#9;&#9;createDriver(browser, version, os, method.getName(), &quot;REPLACE WITH TAG&quot;);&#10;&#9;&#9;}&#10;&#9;&#9;else {&#10;&#9;&#9;&#9;logger.info(&quot;Creating a local WebDriver&quot;);&#10;&#9;&#9;&#9;createDriver(browser);&#10;&#9;&#9;}&#10;&#10;&#9;&#9;getWebDriver().manage().window().maximize();&#10;&#9;&#9;boolean bArg = false;&#10;&#9;&#9;String sArg = &quot;&quot;;&#10;&#9;&#9;boolean isPassed = true;&#10;&#9;&#9;String winHandleBefore = null;&#10;&#9;&#9;String elementID = null;&#10;"/>
                <Action ActionName="Test Cleanup" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;Test ##Path Name[p1]## now ending.&quot;);&#10;&#9;} //end test&#10;} //end class&#10;"/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Text Field</ObjectType>
            <ObjectActions>
                <Action ActionName="Append Text" CodeSnippet=""/>
                <Action ActionName="Click By Name" CodeSnippet=""/>
                <Action ActionName="Input Text" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.fillEditbox(&quot;~VARIABLE_NAME[1]~&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Input Text Plus Tab" CodeSnippet=""/>
                <Action ActionName="Input Text Random Suffix" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.suffixBase(&quot;~VARIABLE_NAME[1]~&quot;,~VARIABLE_NAME[2]~, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Select" CodeSnippet=""/>
                <Action ActionName="Text Input Hardcoded" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.fillEditBoxFromAD(&quot;~VARIABLE_NAME[1]~&quot;, &quot;~VARIABLE_NAME[2]~&quot;, &quot;~VARIABLE_NAME[3]~&quot;, getWebDriver());&#10;"/>
                <Action ActionName="Verify Enabled" CodeSnippet=""/>
                <Action ActionName="Verify Exists" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.assertElementExists(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Has Focus" CodeSnippet=""/>
                <Action ActionName="Verify Not Exists" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyNotExists(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Text" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyText(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Text Hardcoded" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyTextFromAD(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, &quot;~VARIABLE_NAME[2]~&quot;, &quot;~VARIABLE_NAME[3]~&quot;, getWebDriver());&#10;"/>
                <Action ActionName="Verify Text Not Present" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyTextNotPresent(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, getWebDriver(), getExcelTab(), getExcelPath());&#10;"/>
                <Action ActionName="Verify Text Not Present Hardcoded" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;&#9;&#9;TMX_lib.verifyTextNotPresentFromAD(&quot;~VARIABLE_NAME[1]~&quot;, &quot;##Path Name[p1]##&quot;, &quot;&quot;, &quot;~VARIABLE_NAME[2]~&quot;, &quot;~VARIABLE_NAME[3]~&quot;, getWebDriver());&#10;"/>
                <Action ActionName="Verify Visible" CodeSnippet=""/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Wait</ObjectType>
            <ObjectActions>
                <Action ActionName="0.5 Seconds" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;Waiting for 0.5 seconds&quot;);&#10;&#9;&#9;Thread.sleep(500);&#10;"/>
                <Action ActionName="1 Second" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;Waiting for 1 second&quot;);&#10;&#9;&#9;Thread.sleep(1000);&#10;"/>
                <Action ActionName="15 Seconds" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;Waiting for 15 seconds&quot;);&#10;&#9;&#9;Thread.sleep(15000);&#10;"/>
                <Action ActionName="5 Seconds" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;Waiting for 5 seconds&quot;);&#10;&#9;&#9;Thread.sleep(5000);&#10;"/>
            </ObjectActions>
        </Object>
        <Object>
            <ObjectType>Window</ObjectType>
            <ObjectActions>
                <Action ActionName="Close Window" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;getWebDriver().close();&#10;"/>
                <Action ActionName="Navigate Back" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;getWebDriver().navigate().back();&#10;"/>
                <Action ActionName="Navigate to Site" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;getWebDriver().get(&quot;~VARIABLE_NAME[1]~&quot;);"/>
                <Action ActionName="Refresh" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;getWebDriver().navigate().refresh();&#10;&#9;&#9;Thread.sleep(500);&#10;&#9;&#9;TMX_lib.waitForLoad(getWebDriver());&#10;"/>
                <Action ActionName="Return to Last Window" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;getWebDriver().switchTo().window(winHandleBefore);&#10;"/>
                <Action ActionName="Switch to New Window" CodeSnippet="//--------------------------------------------------------------------------------------------&#10;&#9;&#9;logger.info(&quot;##Name[b0]##&quot;);&#10;&#9;&#9;logger.info(&quot;##Description[b1]##&quot;);&#10;&#9;&#9;winHandleBefore = getWebDriver().getWindowHandle();&#10;&#9;&#9;for(String winHandle : getWebDriver().getWindowHandles()) {&#10;&#9;&#9;&#9;if(winHandle.equals(winHandleBefore)){}&#10;&#9;&#9;&#9;else{&#10;&#9;&#9;&#9;&#9;getWebDriver().switchTo().window(winHandle);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;"/>
            </ObjectActions>
        </Object>
    </Objects>
    <PreviewDetails>
        <SaveFileLocation></SaveFileLocation>
        <RunFileLocation></RunFileLocation>
        <HightlightLanguage>3</HightlightLanguage>
    </PreviewDetails>
</AutomationConfiguration>